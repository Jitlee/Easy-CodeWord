<Application x:Class="EasyCodeword.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/EasyCodeword;component/Themes/Brushes.xaml"/>
                <ResourceDictionary Source="/EasyCodeword;component/Themes/ColorPicker.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="MainTextBoxStyle" TargetType="TextBox">
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="AcceptsTab" Value="True"/>
                <Setter Property="AcceptsReturn" Value="False"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border>
                                <ScrollViewer  Margin="2,6" x:Name="PART_ContentHost"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
			<Style TargetType="TextBlock">
				<Setter Property="VerticalAlignment" Value="Center"/>
				<Setter Property="Margin" Value="3"/>
			</Style>
			
			<Style TargetType="TextBox">
				<Setter Property="VerticalAlignment" Value="Center"/>
				<Setter Property="Margin" Value="3"/>
			</Style>
			
			<Style TargetType="ListBox">
				<Setter Property="Margin" Value="3"/>
			</Style>

            <Style TargetType="CheckBox">
                <Setter Property="Margin" Value="3"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            
            <Style TargetType="RadioButton">
                <Setter Property="Margin" Value="3"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <Style x:Key="NormalButtonStyle" TargetType="Button">
                <Setter Property="Height" Value="23"/>
                <Setter Property="Width" Value="75"/>
                <Setter Property="Margin" Value="3"/>
                <Setter Property="Focusable" Value="False"/>
            </Style>

            <Style x:Key="FontListBoxItemStyle" TargetType="ListBoxItem">
                <Setter Property="FontFamily" Value="{Binding FontFamily}"/>
                <Setter Property="FontSize" Value="16"/>
            </Style>

            <Style x:Key="FontStylesListBoxItemStyle" TargetType="ListBoxItem">
                <Setter Property="FontStyle" Value="{Binding FontStyle}"/>
                <Setter Property="FontWeight" Value="{Binding FontWeight}"/>
            </Style>

            <Style x:Key="FontSizesListBoxItemStyle" TargetType="ListBoxItem">
            </Style>
            
            <Style TargetType="ComboBox">
                <Setter Property="Margin" Value="3"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            
            <Style x:Key="MainMenuItemStyle" TargetType="Button">
                <Setter Property="Background" Value="{DynamicResource MainMenuItemBackground}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource MainMenuItemForeground}"/>
                <Setter Property="FontSize" Value="{DynamicResource MainMenuItemFontSize}"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="Margin" Value="{DynamicResource MainMenuItemPadding}"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                        	<ControlTemplate.Resources>
                        		<Storyboard x:Key="OnPreviewMouseDown">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Border">
                        				<SplineDoubleKeyFrame KeyTime="0" Value="0.95"/>
                        			</DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Border">
                                        <SplineDoubleKeyFrame KeyTime="0" Value="0.95"/>
                        			</DoubleAnimationUsingKeyFrames>
                        		</Storyboard>
                        		<Storyboard x:Key="OnPreviewMouseUp">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Border">
                                        <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                        			</DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Border">
                                        <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                        			</DoubleAnimationUsingKeyFrames>
                        		</Storyboard>
                        	</ControlTemplate.Resources>
	                            <Border
                                    x:Name="Border"
									Grid.ColumnSpan="3"
									Grid.RowSpan="3"
                                    RenderTransformOrigin="0.5,0.5"
	                                Background="{TemplateBinding Background}"
	                                BorderBrush="{TemplateBinding BorderBrush}"
	                                BorderThickness="{DynamicResource MainMenuItemBorderThickness}">
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                        </TransformGroup>
                                    </Border.RenderTransform>
	                                <ContentPresenter
	                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
	                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
	                            </Border>
							<ControlTemplate.Triggers>
                        		<EventTrigger RoutedEvent="Mouse.PreviewMouseDown">
                        			<BeginStoryboard Storyboard="{StaticResource OnPreviewMouseDown}"/>
                        		</EventTrigger>
                        		<EventTrigger RoutedEvent="Mouse.PreviewMouseUp">
                        			<BeginStoryboard Storyboard="{StaticResource OnPreviewMouseUp}"/>
                        		</EventTrigger>
                        		<Trigger Property="IsMouseOver" Value="True">
                        			<Setter Property="BorderBrush" Value="{DynamicResource MainMenuItemBorderBrush}"/>
                                </Trigger>
                        	</ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="MenuSubStyle" TargetType="ListBox">
                <Setter Property="ItemsSource" Value="{Binding Items}"/>
                <Setter Property="Margin" Value="0,32,20,32"/>
                <Setter Property="Background" Value="{x:Null}"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <UniformGrid Columns="4"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
               </Setter>
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Height" Value="{DynamicResource MainMenuSubItemSize}"/>
                            <Setter Property="Width" Value="{DynamicResource MainMenuSubItemSize}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <Button
                                                Command="{Binding Command}"
                                                CommandTarget="{Binding CommandTarget}"
                                                Style="{DynamicResource MainMenuItemStyle}">
                                            <StackPanel>
                                                <Image
                                                    Source="{Binding Icon}"
                                                    Height="{DynamicResource MainMenuSubItemImageSize}"
                                                    Width="{DynamicResource MainMenuSubItemImageSize}"/>
                                                <TextBlock
                                                    FontSize="{DynamicResource MainMenuSubItemFontSize}"
                                                    HorizontalAlignment="Center"
                                                    Text="{Binding Title}"/>
                                            </StackPanel>
                                        </Button>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="MetroButtonStyle" TargetType="Button">
                <Setter Property="Height" Value="32"/>
                <Setter Property="Width" Value="87"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderBrush" Value="White"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="BorderThickness" Value="3"/>
                <Setter Property="Margin" Value="10"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid>
                                    <Border x:Name="Background"
                                    Opacity="0"
                                    Background="{TemplateBinding Background}"/>
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefault" Value="True">
                                    <Setter TargetName="Background" Property="Opacity" Value="0.3"/>
                                    <Setter Property="Focusable" Value="False"/>
                                </Trigger>
                                <Trigger Property="IsCancel" Value="True">
                                    <Setter Property="Focusable" Value="False"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Background" Property="Opacity" Value="0.5"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Setter Property="Background" Value="White"/>
                                    <Setter Property="BorderBrush" Value="White"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter TargetName="Background" Property="Opacity" Value="1"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="#FF9A9A9A"/>
                                    <Setter Property="Background" Value="#FFE9E9E9"/>
                                    <Setter Property="BorderBrush" Value="#FFE9E9E9"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter TargetName="Background" Property="Opacity" Value="1"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="MetroTextBoxStyle" TargetType="TextBox">
                <Setter Property="Width" Value="300"/>
                <Setter Property="Background" Value="#A5FFFFFF"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Grid>
                                <Border 
                                    Name="Border"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="2"
                                    Background="{TemplateBinding Background}">
                                </Border>
                                <ScrollViewer Margin="2,6" x:Name="PART_ContentHost"
                                              Background="Transparent"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="Background" Value="#FFFFFFFF"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="BorderBrush" Value="#85FFFFFF"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
